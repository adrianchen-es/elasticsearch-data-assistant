version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - ELASTICSEARCH_API_KEY=${ELASTICSEARCH_API_KEY}
      - AZURE_AI_API_KEY=${AZURE_AI_API_KEY}
      - AZURE_AI_ENDPOINT=${AZURE_AI_ENDPOINT}
      - AZURE_AI_DEPLOYMENT=${AZURE_AI_DEPLOYMENT}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4317}
      - OTEL_SERVICE_NAME=elasticsearch-ai-backend
    ports:
      - "8000:8000"
    networks:
      - app-network

  gateway:
    build: 
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    environment:
      - NODE_ENV=production
      - PORT=3100
      - BACKEND_BASE_URL=http://backend:8000/api
      - OTEL_SERVICE_NAME=es-data-assistant-gateway
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/v1/traces
    ports:
      - "3100:3100" # optional public; nginx uses service name internally
    depends_on:
      - backend
      - otel-collector
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_OTEL_METRIC_ENDPOINT=${REACT_APP_OTEL_METRIC_ENDPOINT:-http://otel-collector:4318/v1/metrics}
      - REACT_APP_OTEL_TRACE_ENDPOINT=${REACT_APP_OTEL_TRACE_ENDPOINT:-http://otel-collector:4318/v1/traces}
    ports:
      - "3000:3000"
    networks:
      - app-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    environment:
      - OTEL_COLLECTOR_EXPORTER_OTLP=${OTEL_COLLECTOR_EXPORTER_OTLP:-http://localhost:8200}
      - ELASTIC_APM_SECRET_TOKEN=${ELASTIC_APM_SECRET_TOKEN:-SomeSecret}
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
